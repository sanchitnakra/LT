using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.ComponentModel.DataAnnotations;
using System.Configuration;
using System.Data.SqlClient;

namespace sampleMVC.Models
{
    public class Competency
    {

        public int Emp_ID { get; set; }
        public string MSID { get; set; }
        public string completionStatus { get; set; }
        public DateTime completionDate { get; set; }
        public DateTime enrollDate { get; set; }
        public DateTime modifiedDate { get; set; }
        public string quizID { get; set; }
        public double marksObtained { get; set; }
        public int attemptCount { get; set; }

        [Required(ErrorMessage = "Please select Competency Level")]
        [Display(Name = "Competency Level")]
        public string compLevel { get; set; }

        public string courseName { get; set; }
        public int courseID { get; set; }

        public int autoGeneratedID { get; set; }

        public string completionStatusFromDB { get; set; }
        public IEnumerable<SelectListItem> selectCompLevel { get; set; }

        public List<Competency> getCoursesFromDBList { get; set; }

        public IEnumerable<string> getCompLevel()
        {
            return new List<string>
            {
                "E0",
                "E1",
                "E2"
            };
        }

        public IEnumerable<SelectListItem> GetSelectListItem(IEnumerable<string> parameters)
        {
            var seletList = new List<SelectListItem>();
            foreach (var param in parameters)
            {
                seletList.Add(new SelectListItem
                {
                    Value = param,
                    Text = param
                });
            }
            return seletList;
        }

        string connectionString = string.Empty;

        public List<Competency> getCompentencyByMSID(string MSID)
        {
            List<string> getCourseLevelandNameByIDlist = new List<string>();
            List<double> getDataFromQuizTablelist = new List<double>();
            List<Competency> getCompentencyByMSIDlist = new List<Competency>();
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();

                SqlCommand cmdFectCoursesByMSID = new SqlCommand(" select * from CT_EMPLOYEE_COMPETENCY where MSID = '" + MSID + "'", conn);
                SqlDataReader srFectCoursesByMSID = cmdFectCoursesByMSID.ExecuteReader();
                while (srFectCoursesByMSID.Read())
                {
                    Competency competencyObj = new Competency();
                    competencyObj.autoGeneratedID = Convert.ToInt32(srFectCoursesByMSID["EMP_COMP_ID"]);
                    competencyObj.Emp_ID = Convert.ToInt32(srFectCoursesByMSID["EMP_ID"]);
                    competencyObj.MSID = srFectCoursesByMSID["MSID"].ToString();
                    competencyObj.courseID = Convert.ToInt32(srFectCoursesByMSID["Compentecy_ID"]);
                    getCourseLevelandNameByIDlist = getCourseLevelandNameByID(competencyObj.courseID);
                    competencyObj.compLevel = getCourseLevelandNameByIDlist[0];
                    competencyObj.courseName = getCourseLevelandNameByIDlist[1];
                    competencyObj.quizID = srFectCoursesByMSID["Quiz_ID"].ToString();
                    completionStatusFromDB = srFectCoursesByMSID["Completion_Status"].ToString();
                    competencyObj.enrollDate = Convert.ToDateTime(srFectCoursesByMSID["EnrollDate"]);
                    if (completionStatusFromDB.Equals("False"))
                    {
                        competencyObj.completionStatus = "Incomplete";
                    }
                    else { competencyObj.completionStatus = "Complete"; }
                    getDataFromQuizTablelist = getDataFromQuizTable(competencyObj.quizID);
                    competencyObj.marksObtained = getDataFromQuizTablelist[0];
                    competencyObj.attemptCount = ((int)getDataFromQuizTablelist[1]);
                    getCompentencyByMSIDlist.Add(competencyObj);
                }

            }
            return getCompentencyByMSIDlist;
        }



        public List<Competency> getCoursesFromDB(string compLevel)
        {
            List<Competency> coursesFromDBlist = new List<Competency>();
            string courseName = string.Empty;
            string connectionString = string.Empty;
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();
                SqlCommand cmdToSelectCourses = new SqlCommand("select * from CT_MasterCompetency where COMPETENCY_LEVEL = '" + compLevel + "'", conn);
                SqlDataReader readCoursesFromDB = cmdToSelectCourses.ExecuteReader();
                while (readCoursesFromDB.Read())
                {
                    Competency compObj = new Competency();
                    compObj.courseID = Convert.ToInt32(readCoursesFromDB["COMPETENCY_ID"]);
                    compObj.courseName = readCoursesFromDB["COMPETENCY_NAME"].ToString();
                    coursesFromDBlist.Add(compObj);
                }
            }
            return coursesFromDBlist;
        }

        public int enrollCourse(int emp_ID, string MSID, int courseID, string quizID)
        {
            int final = 0;
            int rowsToEnrollCourse = 0;
            int rowsToEnrollCourse1 = 0;
            //  bool result = false;
            string dummy = DateTime.Now.ToShortDateString();
            // TimeSpan dummyTime = new TimeSpan();
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();

                // Adding data in Employee Competency Table
                SqlCommand cmdToEnrollCourse = new SqlCommand("insert into CT_EMPLOYEE_COMPETENCY values(" + emp_ID + ",'" + MSID + "'," + courseID + " , " + 0 + ",'','" + DateTime.Today.ToShortDateString() + "','','" + quizID + "')", conn);

                rowsToEnrollCourse = cmdToEnrollCourse.ExecuteNonQuery();


                // Adding data in Employee Quiz Result Table
                SqlCommand cmdToEnrollQuizResult1 = new SqlCommand("insert into CT_EMPLOYEE_QUIZRESULT values(" + courseID + ",'" + quizID + "','0.0','','','',5)", conn);

                rowsToEnrollCourse1 = cmdToEnrollQuizResult1.ExecuteNonQuery();
            }
            return final = rowsToEnrollCourse.Equals(rowsToEnrollCourse1) ? 1 : 0;
        }

        public List<string> getCourseLevelandNameByID(int courseID)
        {
            string compLevel = string.Empty;
            string courseName = string.Empty;
            List<string> courseDetails = new List<string>();
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();
                SqlCommand cmdCoursesDetailsByCourseID = new SqlCommand("select COMPETENCY_LEVEL,COMPETENCY_NAME from CT_MasterCompetency where COMPETENCY_ID = '" + courseID + "'", conn);
                SqlDataReader srCoursesDetailsByCourseID = cmdCoursesDetailsByCourseID.ExecuteReader();
                while (srCoursesDetailsByCourseID.Read())
                {
                    // get course Name and level from CourseID   
                    compLevel = srCoursesDetailsByCourseID["COMPETENCY_LEVEL"].ToString();
                    courseName = srCoursesDetailsByCourseID["COMPETENCY_NAME"].ToString();
                    courseDetails.Add(compLevel);
                    courseDetails.Add(courseName);
                }
                return courseDetails;
            }



        }

        public List<double> getDataFromQuizTable(string quizID)
        {
            double score = 0.0;
            double attemptHistory = 0;
            List<double> courseDetails = new List<double>();
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();
                SqlCommand cmdCoursesDetailsByCourseID = new SqlCommand(" select Score,Attempt_History from CT_EMPLOYEE_QUIZ_RESULT where Quiz_ID = '" + quizID + "'", conn);
                SqlDataReader srCoursesDetailsByCourseID = cmdCoursesDetailsByCourseID.ExecuteReader();
                if (srCoursesDetailsByCourseID.HasRows.Equals(true))
                {
                    srCoursesDetailsByCourseID.Read();
                    // get course Name and level from CourseID   
                    score = Convert.ToDouble(srCoursesDetailsByCourseID["Score"]);
                    attemptHistory = Convert.ToDouble(srCoursesDetailsByCourseID["Attempt_History"]);
                    courseDetails.Add(score);
                    courseDetails.Add(attemptHistory);
                }
                else
                {
                    courseDetails.Add(0.0);
                    courseDetails.Add(0.0);
                }
                return courseDetails;
            }



        }

        public int dropCourse(int id)
        {
            int final, comp_ID_var;
            int rowsToDeleteFromEmp_Comp = 0;
            int rowsToDeleteFromQuizResult = 0;
            connectionString = ConfigurationManager.ConnectionStrings["ConnectionStringTo2043"].ConnectionString;
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                conn.Open();

                // Adding data in Employee Competency Table
                SqlCommand cmdToFetchComp_ID = new SqlCommand("select Compentecy_ID from CT_EMPLOYEE_COMPETENCY where EMP_COMP_ID =" + id + "", conn);
                SqlDataReader sr = cmdToFetchComp_ID.ExecuteReader();
                sr.Read();
                comp_ID_var = Convert.ToInt32(sr["Compentecy_ID"]);
                sr.Close();
                SqlCommand cmdToEnrollCourse = new SqlCommand("delete from CT_EMPLOYEE_COMPETENCY where EMP_COMP_ID =" + id + "", conn);
                rowsToDeleteFromEmp_Comp = cmdToEnrollCourse.ExecuteNonQuery();


                // Adding data in Employee Quiz Result Table
                SqlCommand cmdToEnrollQuizResult1 = new SqlCommand("delete from CT_EMPLOYEE_QUIZRESULT where Compentecy_ID =" + comp_ID_var + "", conn);

                rowsToDeleteFromQuizResult = cmdToEnrollQuizResult1.ExecuteNonQuery();
            }
            return final = rowsToDeleteFromEmp_Comp.Equals(rowsToDeleteFromQuizResult) ? 1 : 0;
        }
    }
}